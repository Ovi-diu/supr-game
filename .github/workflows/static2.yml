<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SuperSEED GAME by Ovi</title>
    <style>
        body {
            text-align: center;
            font-family: Arial, sans-serif;
            color: white; /* Textul va fi alb */
            margin: 0;
            padding: 0;
            background-image: url('https://pbs.twimg.com/media/GlrwD_-XsAAUlY2?format=png&name=large'); /* Fundalul cu poza */
            background-size: cover; /* Acoperă întreaga pagină */
            background-position: center; /* Poziționează imaginea în centrul paginii */
            height: 100vh; /* Întinde fundalul pe întreaga înălțime a paginii */
        }
        .game-wrapper {
            display: flex;
            justify-content: center;
            align-items: flex-start; /* Aliniere la partea de sus */
            margin-top: 20px; /* Marja de sus pentru a adăuga spațiu */
            flex-direction: column; /* Colonează elementele */
            align-items: center; /* Centrează pe orizontală */
        }
        .game-container {
            position: relative;
            z-index: 10;
            background-color: rgba(0, 0, 0, 0.7); /* Fundal transparent mai închis pentru joc */
            width: 400px;
            height: 400px;
            border-radius: 10px;
        }
        canvas {
            border: 2px solid black;
            background-color: lightblue;
        }
        #score {
            font-weight: bold;
            margin-top: 1cm;
        }
        .game-over {
            font-size: 30px;
            font-weight: bold;
            color: red;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); /* Centrează mesajul "Game Over" pe ecran */
            display: none;
        }
        #resetButton {
            display: none;
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #ff0000;
            color: white;
            border: none;
            border-radius: 5px;
            text-align: center; /* Centrează textul */
        }
        #rankTable {
            margin-left: 20px;
        }
        #rankTable td, #rankTable th {
            padding: 10px;
            border: 1px solid black;
        }

    </style>
</head>
<body>
    <div class="game-text">
        <div class="title">SuperSeed GAME $SUPR</div>
        <p>Punctaj: <span id="score">0</span></p>
    </div>

    <div id="nameForm">
        <label for="nameInput">Introduceți numele:</label>
        <input type="text" id="nameInput" placeholder="Nume jucător">
        <button id="startButton">Începe jocul</button>
    </div>

    <div class="game-wrapper">
        <div class="game-container">
            <canvas id="gameCanvas" width="400" height="400"></canvas>
            <div class="game-over" id="gameOverMessage">Game Over</div> <!-- Mesajul Game Over centrat pe canvas -->
        </div>

        <div id="rankTable">
            <table>
                <tr>
                    <th>Jucător</th>
                    <th>Punctaj</th>
                </tr>
                <tr>
                    <td id="playerName">N/A</td>
                    <td id="playerScore">0</td>
                </tr>
            </table>
        </div>

        <button id="resetButton">Reset Game</button>
    </div>

    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        let score = 0;
        let gameOver = false;
        let playerName = '';
        
        const objectImg = new Image();
        objectImg.src = "https://abs-0.twimg.com/emoji/v2/svg/1f331.svg";
        const playerImg = new Image();
        playerImg.src = "https://pbs.twimg.com/profile_images/1874884711790653440/c_y1WmIZ_400x400.jpg";
        const specialImg = new Image();
        specialImg.src = "https://res.cloudinary.com/teepublic/image/private/s--o914pBR_--/c_fit,g_north_west,h_840,w_690/co_ffffff,e_outline:40/co_ffffff,e_outline:inner_fill:1/co_ffffff,e_outline:40/co_ffffff,e_outline:inner_fill:1/co_bbbbbb,e_outline:3:1000/c_mpad,g_center,h_1260,w_1260/b_rgb:eeeeee/t_watermark_lock/c_limit,f_auto,h_630,q_auto:good:420,w_630/v1573276728/production/designs/6652871_0.jpg";

        const player = { x: 180, y: 350, width: 40, height: 40 };
        let isDragging = false;

        const objects = [];
        for (let i = 0; i < 5; i++) { 
            objects.push({ x: Math.random() * 360, y: Math.random() * -100, width: 20, height: 20, speed: 4 });
        }
        const specialObject = { x: Math.random() * 360, y: Math.random() * -100, width: 30, height: 30, speed: 3 };

        function drawPlayer() {
            ctx.drawImage(playerImg, player.x, player.y, player.width, player.height);
        }

        function drawObjects() {
            objects.forEach((object) => {
                ctx.drawImage(objectImg, object.x, object.y, object.width, object.height);
            });
        }

        function drawSpecialObject() {
            ctx.drawImage(specialImg, specialObject.x, specialObject.y, specialObject.width, specialObject.height);
        }

        function update() {
            if (gameOver) return;

            ctx.clearRect(0, 0, canvas.width, canvas.height);

            drawPlayer();
            drawObjects();
            drawSpecialObject();

            objects.forEach((object) => {
                object.y += object.speed;
                if (object.y > canvas.height) {
                    object.y = Math.random() * -100;
                    object.x = Math.random() * 360;
                }

                if (player.x < object.x + object.width &&
                    player.x + player.width > object.x &&
                    player.y < object.y + object.height &&
                    player.y + player.height > object.y) {
                    score++;
                    document.getElementById("score").textContent = score;
                    object.y = Math.random() * -100;
                    object.x = Math.random() * 360;
                }
            });

            specialObject.y += specialObject.speed;
            if (player.x < specialObject.x + specialObject.width &&
                player.x + player.width > specialObject.x &&
                player.y < specialObject.y + specialObject.height &&
                player.y + player.height > specialObject.y) {
                endGame();
            }

            if (specialObject.y > canvas.height) {
                specialObject.y = Math.random() * -100;
                specialObject.x = Math.random() * 360;
            }

            requestAnimationFrame(update);
        }

        function endGame() {
            gameOver = true;
            document.getElementById("gameOverMessage").style.display = "block";
            document.getElementById("resetButton").style.display = "block";
            document.getElementById("playerName").textContent = playerName;
            document.getElementById("playerScore").textContent = score;
        }

        function resetGame() {
            gameOver = false;
            score = 0;
            document.getElementById("score").textContent = score;
            document.getElementById("gameOverMessage").style.display = "none";
            document.getElementById("resetButton").style.display = "none";
            objects.forEach((object) => {
                object.y = Math.random() * -100;
                object.x = Math.random() * 360;
            });
            specialObject.y = Math.random() * -100;
            specialObject.x = Math.random() * 360;
            update();
        }

        document.getElementById("startButton").addEventListener("click", () => {
            playerName = document.getElementById("nameInput").value;
            if (playerName.trim() === '') {
                alert('Please enter your name!');
                return;
            }
            document.getElementById("nameForm").style.display = "none";
            update();
        });

        document.getElementById("resetButton").addEventListener("click", resetGame);

        canvas.addEventListener("mousedown", (e) => {
            isDragging = true;
        });

        canvas.addEventListener("mouseup", () => {
            isDragging = false;
        });

        canvas.addEventListener("mousemove", (e) => {
            if (!isDragging) return;
            const rect = canvas.getBoundingClientRect();
            player.x = e.clientX - rect.left - player.width / 2;
            player.y = e.clientY - rect.top - player.height / 2;
        });
    </script>
</body>
</html>
